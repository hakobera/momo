include ../../VERSION

WEBRTC_PREFIX = $(CURDIR)/webrtc
BOOST_PREFIX = $(CURDIR)/boost
SDL2_PREFIX = $(CURDIR)/sdl2
AWS_SDK_PREFIX = $(CURDIR)/aws-sdk-cpp

WEBRTC = $(WEBRTC_PREFIX)/lib/libwebrtc.a
BOOST = $(BOOST_PREFIX)/include/boost/version.hpp
SDL2 = $(SDL2_PREFIX)/lib/libSDL2.a
LLVM = $(CURDIR)/llvm/clang/bin/clang++
CLI11 = $(CURDIR)/CLI11/include/CLI/Version.hpp
JSON = $(CURDIR)/json/include/nlohmann/json.hpp
AWS_SDK = $(AWS_SDK_PREFIX)/lib/libaws-cpp-sdk-kinesisvideo.a

ifeq ($(JOBS),)
	JOBS := $(shell system_profiler SPHardwareDataType | grep "Total Number of Cores" |  awk '{split($$0,ary,":");print ary[2]}' | xargs)
	ifeq ($(JOBS),)
		JOBS := 1
	endif
endif

.PHONY: all
all: check $(WEBRTC) $(BOOST) $(SDL2) $(LLVM) $(CLI11) $(JSON) $(AWS_SDK)

.PHONY: clean
clean:
	rm -rf webrtc
	rm -rf boost-source
	rm -rf boost
	rm -rf sdl2-source
	rm -rf sdl2
	rm -rf llvm
	rm -rf aws-sdk-cpp-source
	rm -rf aws-sdk-cpp

.PHONY: check
check:
	@if [ "`python --version 2>&1 | cut -d' ' -f2 | cut -b1-3`" != "2.7" ]; then \
	  echo ""; \
	  echo "Python 3 では WebRTC をビルドできません。Python 2.7 を利用して下さい。"; \
	  echo "macOS でのビルド方法については doc/BUILD.md を確認して下さい。"; \
	  echo ""; \
	  exit 1; \
	fi
	@if ! type cmake &> /dev/null ; then \
	  echo ""; \
	  echo "CMake がインストールされていません。Homebrew などを利用して、CMake をインストールして下さい。"; \
	  echo "macOS でのビルド方法については doc/BUILD.md を確認して下さい。"; \
	  echo ""; \
	  exit 1; \
	fi

$(CLI11): ../../VERSION
	rm -rf CLI11
	git clone --branch v$(CLI11_VERSION) --depth 1 https://github.com/CLIUtils/CLI11.git

$(JSON): ../../VERSION
	rm -rf json
	git clone --branch v$(JSON_VERSION) --depth 1 https://github.com/nlohmann/json.git

$(LLVM): $(WEBRTC)
	../../script/get_llvm.sh $(WEBRTC_PREFIX) $(CURDIR)
	touch $(LLVM)

$(WEBRTC): ../../VERSION
	../../script/get_webrtc.sh $(WEBRTC_BUILD_VERSION) macos $(CURDIR)
	touch $(WEBRTC)

$(BOOST): ../../VERSION
	../../script/setup_boost.sh $(BOOST_VERSION) $(CURDIR)/boost-source
	cd $(CURDIR)/boost-source/source && ./b2 visibility=hidden link=static variant=release install -j$(JOBS) --prefix=$(BOOST_PREFIX) --ignore-site-config --with-filesystem
	touch $(BOOST)

$(SDL2): $(LLVM)
	../../script/setup_sdl2.sh $(SDL2_VERSION) $(CURDIR)/sdl2-source
	rm -rf $(CURDIR)/sdl2-source/build
	mkdir -p $(CURDIR)/sdl2-source/build
	cd $(CURDIR)/sdl2-source/build && ../source/configure --disable-shared --prefix=$(SDL2_PREFIX)
	cd $(CURDIR)/sdl2-source/build && make && make install
	touch $(SDL2)

$(AWS_SDK): ../../VERSION
	../../script/setup_aws_sdk.sh $(AWS_SDK_VERSION) $(CURDIR)/aws-sdk-cpp-source
	rm -rf $(CURDIR)/aws-sdk-cpp-source/build
	mkdir -p $(CURDIR)/aws-sdk-cpp-source/build
	cd $(CURDIR)/aws-sdk-cpp-source/build && cmake -DBUILD_ONLY="kinesisvideo" -DBUILD_SHARED_LIBS=OFF -DCPP_STANDARD=14 -DENABLE_TESTING=OFF -DCMAKE_INSTALL_PREFIX=$(AWS_SDK_PREFIX) ../source
	cd $(CURDIR)/aws-sdk-cpp-source/build && make -j$(JOBS) && make install
